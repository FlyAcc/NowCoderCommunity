<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id,conversation_id,content, status, create_time
    </sql>
    <sql id="insertFields">
        from_id, to_id,conversation_id,content, status, create_time
    </sql>
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertFields"/>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    <update id="updateStatus">
        update message
        set status = #{status}
        where id in
        <!--Mybatis可以使用foreach -->
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="selectConversations" resultType="com.nowcoder.community.entity.Message">
        select
        <include refid="selectFields"/>
        from message
        where id in (
        -- 将消息通过conversation分组，然后取其中最新的消息
        select max(id) from message -- 最新的消息id越大
        where status != 2 -- 2:删除
        and from_id != 1 -- 1:系统（from_id为1的message指系统通知）
        and (from_id = #{userId} or to_id = #{userId}) -- 用户可能是会话发送方也可能是接收方
        group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectConversationCount" resultType="int">
        select count(m.maxid)
        from (
                 select max(id) as maxid -- alias
                 from message
                 where status != 2
                   and from_id != 1
                   and (from_id = #{user_id} or to_id = #{userId})
                 group by conversation_id
             ) as m
    </select>
    <select id="selectLetters" resultType="com.nowcoder.community.entity.Message">
        select
        <include refid="selectFields"/>
        from message
        where status !=2
        and from_id!=1
        and conversation_id = #{conversationId}
        order by id desc -- 最新的在前面
        limit #{offset}, #{limit}
    </select>
    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
          and from_id != 1
          and conversation_id = #{conversationId};
    </select>
    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0 -- 未读
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>
    <select id="selectLatestNotice" resultType="com.nowcoder.community.entity.Message">
        select
        <include refid="selectFields"/>
        from message
        where id in(
        -- 查询未删除的最新的某类系统通知
        select max(id) from message
        where status != 2 -- 未删除
        and from_id = 1 -- 系统通知
        and to_id = #{userId}
        and conversation_id = #{topic}
        )
    </select>
    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
          and from_id = 1
          and to_id = #{userId}
          and conversation_id = #{topic}
    </select>
    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0 -- 未读
        and from_id = 1
        and to_id = #{userId}
        -- 查询所有未读系统通知或某类系统通知
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>
    <select id="selectNotices" resultType="com.nowcoder.community.entity.Message">
        select
        <include refid="selectFields"/>
        from message
        where status!=2
        and from_id=1
        and to_id=#{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>
</mapper>